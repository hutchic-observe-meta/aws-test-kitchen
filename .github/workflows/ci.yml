name: PR Build Image

on:
  push:
    branches:
      - chore/ci

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    env:
      PROVIDER: cloudformation
      OBSERVE_CUSTOMER: ${{ secrets.OBSERVE_CUSTOMER }}
      OBSERVE_TOKEN: ${{ secrets.OBSERVE_TOKEN }}
      OBSERVE_DOMAIN: ${{ secrets.OBSERVE_DOMAIN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      USER: github-action-${{ github.run_id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Metadata for Docker Image
      id: docker_metadata
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch

    - name: Set IMAGE_NAME environment variable
      run: |
        IMAGE_NAME=$(echo "${DOCKER_METADATA_OUTPUT_TAGS}" | awk -F '\n' '{print $1}')
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

    - name: Check if an image already exists
      continue-on-error: true
      run: docker pull $IMAGE_NAME

    - name: Build Docker image
      run: make docker/build

    - name: Apply labels to Docker image
      run: |
        echo "FROM $IMAGE_NAME" > tmp.Dockerfile
        LABELS=$(echo "${DOCKER_METADATA_OUTPUT_JSON}" | jq -r '.labels | to_entries[] | [.key, .value] | join("=")')
        for label in $LABELS; do
          docker build -f tmp.Dockerfile -t $IMAGE_NAME --label $label .
        done

    - name: Tag Docker image
      run: |
        # Extract tags and apply them
        for tag in $DOCKER_METADATA_OUTPUT_TAGS; do
          docker tag $IMAGE_NAME $tag
        done
    
    - name: Run tests
      run: make docker/test

    - name: Push Docker images
      if: success()
      run: |
        for tag in $DOCKER_METADATA_OUTPUT_TAGS; do
          docker push $tag;
        done


    - name: Teardown/Clean
      if: always()
      run: make docker/clean
      continue-on-error: true
