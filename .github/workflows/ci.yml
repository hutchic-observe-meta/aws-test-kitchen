name: PR Build Image

on:
  push:
    branches:
      - chore/ci

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    env:
      PROVIDER: cloudformation
      OBSERVE_CUSTOMER: ${{ secrets.OBSERVE_CUSTOMER }}
      OBSERVE_TOKEN: ${{ secrets.OBSERVE_TOKEN }}
      OBSERVE_DOMAIN: ${{ secrets.OBSERVE_DOMAIN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      USER: github-action-${{ github.run_id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Metadata for Docker Image
      id: docker_metadata
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch

    - name: Build Docker image (without pushing)
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        load: true
        tags: ${{ steps.docker_metadata.outputs.tags }}
        labels: ${{ steps.docker_metadata.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Run tests
      run: make docker/test

    - name: Push Docker image
      if: success()
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.docker_metadata.outputs.tags }}
        labels: ${{ steps.docker_metadata.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Teardown/Clean
      if: always()
      run: make docker/clean
      continue-on-error: true
